#include <iostream>
using namespace std;

// creating a node structure
struct node{
      int data;
      struct node *next;
           };

//Creating a class stackLL
class stack
{
      struct node *top;
      public:
      stack() //constructor
      {
            top = NUL;
      }
      void push(); //to insert an element
      void pop();  //to delete an element
      void show(); //to show the stack
};

//Push operation
void stack::push()
{
  int value;
  struct node *ptr;
  cout<< "\n PUSH operation";
  cout<< "Enter a number to insert: ";
  cin>> value;
  ptr = new node;
  ptr->data = value;
  ptr->next = NULL;
  if(top!= NULL){
                 ptr->next = top;
                 top = ptr;
                 cout<< "New item is inserted to the stack.\n";
                 }
 }

//Pop operation
void stack::pop()
{
  struct node *temp;
  if(top == NULL){
                   cout<< "The stack is empty\n";
                 }
  temp = top;
  top = top->next;
  cout<< "POP operation\n"
  cout<< "Popped operation is "<<temp->data;
  delete temp;
}

//Show stack
void stack::show()
{
  struct node *ptr1 = top;
  cout<< "\nThe stack is\n";
  while(ptr1!+ NULL){
                      cout<< ptr1->data<<" ->";
                      ptr1 = ptr1->next;
                    }
  cout<< "NULL\n";
}

//Main function
int main(){
         stack s;
         int choice;
         while(1)
         {
            cout<< "\n"
            cout<< "\t\tStacks using linked list\n";
            cout<< "1: PUSH\n2: POP\n3: DISPLAY STACK\n4: EXIT\n";
            cout<< "Enter your choise(1-4)";
            cin>> choice;
            switch(choice)
            {
              case 1:
                   s.push();
                   break;
              case 2:
                   s.pop();
                   break;
              case 3:
                   s.show();
                   break;
              case 4:
                   return 0;
                   break;
              default:
                   cout<< "\nPlease enter correct choice(1-4)";
                   break;
             }
           }
           return 0;
}

